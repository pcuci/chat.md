{
  "name": "filechat",
  "displayName": "chat.md",
  "description": "Interact with LLMs directly in markdown files",
  "version": "0.1.0",
  "publisher": "arusia",
  "repository": {
    "type": "git",
    "url": "https://github.com/arusia/filechat"
  },
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:markdown",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "filechat.newChat",
        "title": "chat.md: New chat.md"
      },
      {
        "command": "filechat.newContextChat",
        "title": "chat.md: New Chat with Workspace Context"
      },
      {
        "command": "filechat.addApiConfig",
        "title": "chat.md: Add or Edit API Configuration"
      },
      {
        "command": "filechat.selectApiConfig",
        "title": "chat.md: Select API Configuration"
      },
      {
        "command": "filechat.removeApiConfig",
        "title": "chat.md: Remove API Configuration"
      },
      {
        "command": "filechat.refreshMcpTools",
        "title": "chat.md: Refresh MCP Tools"
     },
     {
       "command": "filechat.insertNextBlock",
       "title": "chat.md: Insert Next Block"
      },
      {
        "command": "filechat.cancelStreaming",
        "title": "chat.md: Cancel Streaming"
      }
    ],
    "configuration": {
      "title": "chat.md",
      "properties": {
        "chatmd.apiConfigs": {
          "type": "object",
          "description": "Dictionary of named API configurations",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["anthropic", "openai"],
                "description": "Provider type"
              },
              "apiKey": {
                "type": "string",
                "description": "API Key for the selected provider"
              },
              "base_url": {
                "type": "string",
                "description": "Base URL for the API (optional, leave empty for default)"
              },
              "model_name": {
                "type": "string",
                "description": "Model name to use with the selected provider"
              }
            },
            "required": ["type", "apiKey"]
          },
          "default": {},
          "scope": "application"
        },
        "chatmd.selectedConfig": {
          "type": "string",
          "description": "Name of the selected API configuration",
          "scope": "application"
        },
        "chatmd.mcpServers": {
          "type": "object",
          "description": "MCP server configurations for tool integration",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to start the MCP server"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Arguments for the MCP server command"
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Environment variables for the MCP server"
              }
            },
            "required": [
              "command",
              "args"
            ]
          },
          "default": {},
          "scope": "application"
         }
       }
     },
     "keybindings": [
       {
         "command": "filechat.insertNextBlock",
         "key": "shift+enter",
         "when": "editorTextFocus && editorLangId == markdown"
       },
       {
         "command": "filechat.newContextChat",
         "key": "alt+cmd+'",
         "mac": "alt+cmd+'",
         "when": "editorTextFocus"
       }
     ]
   },
   "scripts": {
     "vscode:prepublish": "node ./esbuild.js --production",
    "esbuild-base": "node ./esbuild.js",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "compile": "npm run esbuild",
    "watch": "npm run esbuild-watch",
    "pretest": "npm run esbuild && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "build:vsix": "npm run vscode:prepublish && npx @vscode/vsce package"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "pretest": "npm run esbuild && npm run lint",
    "@types/node": "^14.0.27",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^4.1.1",
    "@typescript-eslint/parser": "^4.1.1",
    "esbuild": "^0.25.2",
    "eslint": "^7.9.0",
    "glob": "^7.1.6",
    "typescript": "^4.0.2",
    "vscode-test": "^1.4.0"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.8.0",
    "zod": "^3.24.2"
  }
}
